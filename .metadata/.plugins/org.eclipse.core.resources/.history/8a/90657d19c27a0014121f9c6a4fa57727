package com.example.assignmenttracker;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;

public class EmailContentToSendActivity extends Activity {

	String ass_Title, email_To, email_Subject, email_Msg, course_Title,
			ass_Progress, dueDateString;
	long daysTillDue;

	SQLiteDatabase db = MainActivity.db.getReadableDatabase();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_email_content_to_send);
		Intent getEmailDestInfoIntent = getIntent();
		ass_Title = getEmailDestInfoIntent.getStringExtra("assTitle");
		email_To = getEmailDestInfoIntent.getStringExtra("emailTo");
		email_Msg = getEmailDestInfoIntent.getStringExtra("emailMsg");
		email_Subject = "CURRENT PROGRESS: " + ass_Title;

		Cursor c;
		if (MainActivity.role == "Student") {
			c = db.query(
					"tbl_Assignment",
					new String[] { "assignmentNo, assignmentTitle, assignmentCourse, assignmentDueDate, assignmentProgress" },
					"assignmentTitle = \"" + ass_Title + "\";", null, null,
					null, null);
		} else { // role == "Teacher"
			c = db.query(
					"tbl_TeacherAssignment",
					new String[] { "assignmentNo, assignmentTitle, assignmentCourse, assignmentDueDate, assignmentProgress" },
					"assignmentTitle = \"" + ass_Title + "\";", null, null,
					null, null);
		}

		while (c.moveToNext()) {

			course_Title = c.getString(2);
			dueDateString = c.getString(3);
			ass_Progress = c.getString(4);

			Calendar assDueDate = Calendar.getInstance();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",
					Locale.CANADA);
			try {
				assDueDate.setTime(sdf.parse(c.getString(3)));
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}// all done
			Calendar today = Calendar.getInstance();
			daysTillDue = (assDueDate.getTimeInMillis() - today
					.getTimeInMillis())
					/ AddAssignmentActivity.DAY_IN_MILLISECS;

			final TextView tv_To = (TextView) findViewById(R.id.tv_To);
			final TextView tv_subject = (TextView) findViewById(R.id.tv_subject);
			final TextView tv_emailMsg = (TextView) findViewById(R.id.tv_emailMsg);
			final TextView tv_assTitle = (TextView) findViewById(R.id.tv_assTitle);
			final TextView courseCodeEmail = (TextView) findViewById(R.id.courseCodeEmail);
			final TextView courseProgressEmail = (TextView) findViewById(R.id.courseProgressEmail);
			final TextView coursedueDateEmail = (TextView) findViewById(R.id.coursedueDateEmail);
			final TextView courseDaysLeftEmail = (TextView) findViewById(R.id.courseDaysLeftEmail);
			final ProgressBar pb_courseProgress = (ProgressBar) findViewById(R.id.reportProgressBar);

			tv_To.setText(email_To);
			tv_subject.setText(email_Subject);
			if (!email_Msg.isEmpty()) {
				tv_emailMsg.setVisibility(0);
				tv_emailMsg.setText(email_Msg);
			}
			tv_assTitle.setText(ass_Title);
			courseCodeEmail.setText(course_Title);
			courseProgressEmail.setText(ass_Progress + "%");
			pb_courseProgress.setProgress(Integer.parseInt(ass_Progress));
			coursedueDateEmail.setText(dueDateString.split(" ")[0]);
			courseDaysLeftEmail.setText(String.valueOf(daysTillDue));

			final AlertDialog.Builder helpBuilder = new AlertDialog.Builder(
					this);
			// new AlertDialog.Builder(this);
			// helpBuilder.setTitle("ERROR!");
			helpBuilder.setMessage("The email has been sent");
			helpBuilder.setNegativeButton("Ok",
					new DialogInterface.OnClickListener() {

						public void onClick(DialogInterface dialog, int which) {
							finish();
						}
					});

			final Button btnSendEmail = (Button) findViewById(R.id.btnSend);
			btnSendEmail.setOnClickListener(new View.OnClickListener() {
				public void onClick(View v) {
					String body = ass_Title.toUpperCase()+" PROGRESS REPORT\n"
							 + "===================================\n\n"
							 + "Course | "+course_Title+"\n"
							 + "--------------------------------------------------\n"
							 + "Current Progress | "+ass_Progress+"%\n"
							 + "--------------------------------------------------\n"
							 + "Due Date | "+dueDateString.split(" ")[0]+"\n"
							 + "--------------------------------------------------\n"
							 + "Days Till Due | "+daysTillDue+"\n"
							 + "--------------------------------------------------\n";
					// code to send email with new intent
					final Intent emailIntent = new Intent(
							android.content.Intent.ACTION_SEND);
					emailIntent.setType("text/html");
					emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL,
							new String[] { email_To });
					emailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT,
							email_Subject);
					emailIntent.putExtra(android.content.Intent.EXTRA_TEXT,
							body);
					startActivity(Intent.createChooser(emailIntent, "Email:"));

					// new thread needed to suppress the confirmation message
					// for a while with sleep timer
					new Thread(new Runnable() {
						@Override
						public void run() {
							try {
								// waits 5 seconds before checking if
								// EmailContentToSendActivity is currently in
								// the foreground
								Thread.sleep(5000);
							} catch (InterruptedException e) {
								e.printStackTrace();
							}
							runOnUiThread(new Runnable() {
								@Override
								public void run() {

									try {
										Thread.sleep(5000);
									} catch (InterruptedException e) {
										e.printStackTrace();
									}
									AlertDialog helpDialog = helpBuilder
											.create();
									helpDialog.show();

								}

							});
						}
					}).start();
					// end of thread code
				}
			});

			final Button btnCancelEmail2 = (Button) findViewById(R.id.btnCancelEmail2);
			btnCancelEmail2.setOnClickListener(new View.OnClickListener() {
				public void onClick(View v) {
					if (MainActivity.role == "Student") {
						// go back to main
						Intent cancelIntent = new Intent(
								EmailContentToSendActivity.this,
								MainActivity.class);
						startActivity(cancelIntent);
					} else { // role == "Teacher"
						// go back to show assignments
						Intent cancelIntent = new Intent(
								EmailContentToSendActivity.this,
								ShowTeacherAssignmentsActivity.class);
						startActivity(cancelIntent);
					}
					finish();
				}
			});

		}

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.email_content_to_send, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
