package com.example.assignmenttracker;

import android.app.Activity;
import android.content.ContentValues;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;

public class MainActivity extends Activity {

	public static string role = ""
	public static DatabaseManager db;
	private static final String tables[] = { "tbl_Semester", "tbl_Assignment", "tbl_Course" };
	private static final String tableCreatorString[] = {
			"CREATE TABLE IF NOT EXISTS tbl_Semester (semesterNo INTEGER PRIMARY KEY AUTOINCREMENT , semesterDetails TEXT);",
			"CREATE TABLE IF NOT EXISTS tbl_Assignment (assignmentNo INTEGER PRIMARY KEY AUTOINCREMENT , assignmentTitle TEXT , assignmentCourse TEXT, assignmentDueDate DATE , assignmentProgress INT);",
			"CREATE TABLE IF NOT EXISTS tbl_Course (courseNo INTEGER PRIMARY KEY AUTOINCREMENT, CourseCode TEXT , CourseName TEXT, semesterDetails TEXT, Professor TEXT , Description TEXT);",
			"CREATE TABLE IF NOT EXISTS tbl_TeacherSemester (semesterNo INTEGER PRIMARY KEY AUTOINCREMENT , semesterDetails TEXT);",
			"CREATE TABLE IF NOT EXISTS tbl_TeacherAssignment (assignmentNo INTEGER PRIMARY KEY AUTOINCREMENT , assignmentTitle TEXT , assignmentCourse TEXT, assignmentDueDate DATE , assignmentProgress INT);",
			"CREATE TABLE IF NOT EXISTS tbl_TeacherCourse (courseNo INTEGER PRIMARY KEY AUTOINCREMENT, CourseCode TEXT , CourseName TEXT, semesterDetails TEXT, Professor TEXT , Description TEXT);"};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
        db = new DatabaseManager(this);
        db.dbInitialize( tables,tableCreatorString);
		setContentView(R.layout.activity_main);
		
        SharedPreferences runCheck = getSharedPreferences("hasRunBefore", 0); //load the preferences
        Boolean hasRun = runCheck.getBoolean("hasRun", false); //see if it's run before, default no
        if (!hasRun) {
            SharedPreferences settings = getSharedPreferences("hasRunBefore", 0);
            SharedPreferences.Editor edit = settings.edit();
            edit.putBoolean("hasRun", true); //set to has run
            edit.commit(); //apply
            populateCourseTable(db);

        }
        else {
            //code if the app HAS run before

    		
        }
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.add_menu, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		Intent adds;
		switch (item.getItemId()) {
		case R.id.add_assignment:
			adds = new Intent(this, AddAssignmentActivity.class);
			startActivity(adds);
			return true;
		case R.id.add_course:
			adds = new Intent(this, AddCourseActivity.class);
			startActivity(adds);
			return true;
		case R.id.add_semester:
			adds = new Intent(this, AddSemesterActivity.class);
			startActivity(adds);
			return true;
		case R.id.show_semesters:
			adds = new Intent(this, ShowSemestersActivity.class);
			startActivity(adds);
			return true;
		case R.id.show_courses:
			adds = new Intent(this, ShowCoursesActivity.class);
			startActivity(adds);
			return true;
		case R.id.show_devtools:
			adds = new Intent(this, DevTools.class);
			startActivity(adds);
			return true;		
		default:
			return super.onOptionsItemSelected(item);
		}
	}
	//To be removed before final deployment
    public void populateCourseTable(DatabaseManager db)
    {

        
        final String fields[] = {"CourseCode", "CourseName", "Professor", "Description"};
        final String record[] = new String[4];
        record[0]= "COMP123";
        record[1]= "Programming";
        record[2]= "Illia Nika";
        record[3]= "Programming coure";
 		
	        //Log.d("Name: ", record[1]);	       
	        //populate the row with some values
	        ContentValues values = new ContentValues();
	        for (int i=0;i<record.length;i++)
	        	values.put(fields[i],record[i]);  
	        //add the row to the database
	        db.addRecord(values, "tbl_Course", fields,record);
	        
    }
    
	public static String[] getTables() {
		return tables;
	}
	
	public static String[] getTableString() {
		return tableCreatorString;
	}
}
