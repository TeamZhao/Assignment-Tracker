package com.example.assignmenttracker;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.ContextMenu;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.os.Build;

public class ShowTeacherAssignmentsActivity extends ActionBarActivity {

	ListView assignmentListView;
	SQLiteDatabase db = MainActivity.db.getReadableDatabase();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_show_teacher_assignments);
		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();

			assignmentListView = (ListView) findViewById(R.id.fragment_show_teacher_assignment);
			registerForContextMenu(assignmentListView);

			List<Map<String, Object>> assMapList = new ArrayList<Map<String, Object>>();

			Map<String, Object> map = new HashMap<String, Object>();
			// List table = MainActivity.db.getTable("tbl_Assignment");

			Cursor c = db
					.query("tbl_Assignment",
							new String[] { "assignmentNo, assignmentTitle, assignmentProgress" },
							"assignmentDueDate > datetime('now','localtime')",
							null, null, null, null); // change to
														// tbl_TeacherAssignment
			while (c.moveToNext()) {

				map = new HashMap<String, Object>();
				map.put("id", String.valueOf(c.getInt(0)));
				map.put("title", c.getString(1));
				map.put("progress", c.getString(2));
				assMapList.add(map);
			}

			AssignmentAdapter adapter = new AssignmentAdapter(this, assMapList);
			assignmentListView.setAdapter(adapter);

			assignmentListView
					.setOnItemLongClickListener(new OnItemLongClickListener() { // set
																				// value
																				// of
																				// selected
																				// list
																				// item
																				// on
																				// longpress

						@Override
						public boolean onItemLongClick(AdapterView<?> parent,
								View v, int position, long id) {
							final String item = (String) parent
									.getItemAtPosition(position);// value
																	// of
																	// selected
																	// list
																	// item
																	// as
																	// string
							return false;
						}
					});

			assignmentListView
					.setOnItemClickListener(new OnItemClickListener() { // shows
						// toast
						// on
						// single
						// tap

						@Override
						public void onItemClick(AdapterView<?> parent, View v,
								int position, long id) {
							final String item = (String) parent
									.getItemAtPosition(position);// value
																	// of
																	// selected
																	// list
																	// item
																	// as
																	// string
							Toast.makeText(getApplicationContext(),
									"Your Choice : " + item, Toast.LENGTH_SHORT)
									.show();

						}

					});

		}

	}
	
	public void onCreateContextMenu(ContextMenu menu, View v,
			ContextMenu.ContextMenuInfo menuInfo) {
		super.onCreateContextMenu(menu, v, menuInfo);
		MenuInflater inflater = this.getMenuInflater();
		inflater.inflate(R.menu.context_float_menu, menu);
	}
	
	@Override
	public boolean onContextItemSelected(MenuItem item) {
		 AdapterView.AdapterContextMenuInfo info =
		 (AdapterView.AdapterContextMenuInfo) item.getMenuInfo();
		 
		 ListView templist = this.getListView();
		 View mView = templist.getChildAt(info.position);
		 //String val =info.getItemAtPosition(info.position);
		 Intent intent = new Intent(getActivity(), UpdateAssignmentActivity.class);
		 TextView mytextview = (TextView) mView.findViewById(R.id.id_ass);
		 assID = Integer.parseInt(mytextview.getText().toString());
		 final String str;
		 String selectedFromList = (templist.getItemAtPosition((int) info.position).toString());
		 String lines[] = selectedFromList.split("title=");
		 str = lines[1].substring(0, lines[1].length()-1);
		switch (item.getItemId()) {
		case R.id.context_menu_update:

	         //Toast.makeText(getActivity().getApplicationContext(), str,Toast.LENGTH_LONG).show();
			intent.putExtra("assTitle",String.valueOf(str));
			startActivity(intent);
			return true;
		case R.id.context_menu_delete:
			// Confirm Deletion
			Toast.makeText(getActivity().getApplicationContext(), str,Toast.LENGTH_LONG).show();
			new AlertDialog.Builder(getActivity())
			.setTitle("Confirm Deletion")
			.setMessage("Do you really want to delete this Assignment?")
			.setIcon(android.R.drawable.ic_dialog_alert)
			.setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
			    public void onClick(DialogInterface dialog, int whichButton) {
			    	// Delete Record
			    	db.delete("tbl_Assignment","assignmentTitle=\'" + String.valueOf(str)+"\'", null);
			        Toast.makeText(getActivity(), "Assignment" + String.valueOf(str) + "Deleted", Toast.LENGTH_SHORT).show();
			        getActivity().recreate();
			    }})
			 .setNegativeButton(android.R.string.no, null).show();
			// Do Nothing 
			return true;
		default:
			return super.onContextItemSelected(item);
		}

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.show_teacher_assignments, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(
					R.layout.fragment_show_teacher_assignments, container,
					false);
			return rootView;
		}
	}
}
